#Leetcode 118
Pascal's Triangle

https://leetcode.com/problems/pascals-triangle/

Approach : O(n^2)
  ->the basic algo is that the ith row val is the sum of prevrow[ith value] and prevrow[i-1] value
  -> 1 2 1       val 3 has index of 1 so i=1 the prevrow[i-1]=1 and prevrow[i]=2 so 1+2=3
    1 3 3 1
  -> You loop through and check if j<=i for each row has to have incrementative j.

#Java code:
public List<List<Integer>> generate(int numRows) {
        ArrayList<List<Integer>>res=new ArrayList<>();
        for(int i=0;i<numRows;i++){
            List<Integer>row=new ArrayList<>();
            for(int j=0;j<=i;j++){
                if(j==0 || j==i){
                    row.add(1);
                }else{
                    int left=res.get(i-1).get(j-1);
                    int right=res.get(i-1).get(j);
                    row.add(left+right);
                }
            }
            res.add(row);
        }
        return res;
    }
